generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  role      Role
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  listings  Listing[]
  cards     Card[]   @relation("UserCards")
}

model Listing {
  id        String         @id @default(uuid())
  title     String
  price     Decimal
  seller    User           @relation(fields: [sellerId], references: [id])
  sellerId  String
  status    ListingStatus  @default(DRAFT)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

model Card {
  id          String   @id @default(uuid())
  title       String
  year        Int
  player      String
  team        String
  grade       String?
  imageUrl    String?
  owner   User?   @relation("UserCards", fields: [ownerId], references: [id])
  ownerId     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Auction {
  id String @id @default(uuid())
  // TODO: Add fields later
}

model Order {
  id String @id @default(uuid())
  // TODO: Add fields later
}

model Payout {
  id String @id @default(uuid())
  // TODO: Add fields later
}

model Shipment {
  id String @id @default(uuid())
  // TODO: Add fields later
}

model Dispute {
  id String @id @default(uuid())
  // TODO: Add fields later
}

model VaultLocation {
  id String @id @default(uuid())
  // TODO: Add fields later
}

model BreakerPartner {
  id String @id @default(uuid())
  // TODO: Add fields later
}

enum Role {
  BUYER
  SELLER
  PARTNER
  ADMIN
}

enum ListingStatus {
  DRAFT
  ACTIVE
  SOLD
  CANCELLED
}

